#!/usr/bin/env bash

set -e

DIR=$(dirname "$( cd -- "$( dirname -- "${BASH_SOURCE[0]}" )" &> /dev/null && pwd )")
TARGETDIR=$(realpath --relative-to="$DIR" .)
cd "$DIR"

# TODO(vipa, 2023-05-15): We later want to transform arguments given
# after "--" to be resolved relative to $TARGETDIR but given to
# test-spec as relative to $DIR, but I don't know how to do that
# conveniently in bash atm, so I'm leaving it for now.
if [ ! "$DIR" -ef "$TARGETDIR" ]; then
  echo "ERROR: this test script only knows how to run tests while the working directory is the root of the repository."
  exit 1
fi

export OCAMLPATH=$DIR/build/lib
export MCORE_LIBS=stdlib=$DIR/src/stdlib

if [ misc/test-spec -ot misc/test-spec.mc ]; then
  if command -v mi >/dev/null 2>&1; then
    mi compile misc/test-spec.mc --output misc/test-spec
  else
    build/mi compile misc/test-spec.mc --output misc/test-spec
  fi
fi

if command -v tup >/dev/null 2>&1; then
  if [ -d ".tup" ]; then
    useTup=1
  else
    useTup=0
    echo "'tup' installed, but not initialized. Run 'tup init' if you want to use 'tup'."
  fi
else
  useTup=0
fi

if [ $useTup -eq 1 ]; then
  echo "Using 'tup' as a test runner"
  tmp=$(mktemp)
  if ! misc/test-spec --tup-filter "$@" > "$tmp"; then
    cat "$tmp"
    rm "$tmp"
    exit 1
  fi
  mapfile -t args < "$tmp"
  rm "$tmp"
  exec tup "${args[@]}"
else
  echo "Using 'make' as a test runner"
  exec make -f <(misc/test-spec --make "$@")
fi
